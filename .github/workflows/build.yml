name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-unknown-linux-gnu
      
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
      
      - name: Prepare artifact
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          mkdir -p release
          cp target/x86_64-unknown-linux-gnu/release/sigil-gen "release/sigil-gen-linux-$SHORT_SHA"
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: release/

  build-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-pc-windows-gnu
      
      - name: Add Windows target
        run: rustup target add x86_64-pc-windows-gnu
      
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-gnu
      
      - name: Prepare artifact
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          mkdir -p release
          cp target/x86_64-pc-windows-gnu/release/sigil-gen.exe "release/sigil-gen-windows-$SHORT_SHA.exe"
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: release/

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version from Cargo.toml
        id: version
        run: |
          VERSION=$(grep -m1 'version =' Cargo.toml | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Version ${{ steps.version.outputs.version }}
            Built from commit [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            Short commit hash: ${{ github.sha | substr(0, 7) }}
          files: |
            artifacts/linux-binary/*
            artifacts/windows-binary/*
          draft: false
          prerelease: false
